<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Jeu de dames:  Fichier source de min-max.c</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Généré par Doxygen 1.7.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Recherche');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="icon.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Jeu de dames&#160;<span id="projectnumber">Version Finale</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Page&#160;principale</span></a></li>
      <li><a href="annotated.html"><span>Structures&#160;de&#160;données</span></a></li>
      <li class="current"><a href="files.html"><span>Fichiers</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Recherche" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>Liste&#160;des&#160;fichiers</span></a></li>
      <li><a href="globals.html"><span>Portée&#160;globale</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<h1>min-max.c</h1>  </div>
</div>
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * min-max.c</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> *  Created on: 14 avr. 2011</span>
<a name="l00005"></a>00005 <span class="comment"> *      Author: bastien</span>
<a name="l00006"></a>00006 <span class="comment"> */</span>
<a name="l00007"></a>00007 
<a name="l00008"></a>00008 <span class="preprocessor">#define maximum(a,b) (a&gt;=b?a:b)</span>
<a name="l00009"></a>00009 <span class="preprocessor"></span><span class="preprocessor">#define minimum(a,b) (a&lt;=b?a:b)</span>
<a name="l00010"></a>00010 <span class="preprocessor"></span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include &lt;time.h&gt;</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include &quot;<a class="code" href="min-max_8h.html" title="Implémentation du min-max.">min-max.h</a>&quot;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="keywordtype">double</span> max(<a class="code" href="structplateau.html" title="Objet plateau. Le plateau est composé de 50 cases, numérotées de 1 à 50. Il comporte un historique de...">plateau</a> p, <span class="keywordtype">int</span> profondeur, <span class="keywordtype">double</span> alpha, <span class="keywordtype">double</span> beta);
<a name="l00017"></a>00017 <span class="keywordtype">double</span> min(<a class="code" href="structplateau.html" title="Objet plateau. Le plateau est composé de 50 cases, numérotées de 1 à 50. Il comporte un historique de...">plateau</a> p, <span class="keywordtype">int</span> profondeur, <span class="keywordtype">double</span> alpha, <span class="keywordtype">double</span> beta);
<a name="l00018"></a>00018 
<a name="l00019"></a><a class="code" href="min-max_8h.html#a5ac518ee617eb3482548c57dd2c10807">00019</a> <a class="code" href="structcoup.html" title="Objet coup. Un coup est défini par un numéro de case de départ, un numéro de case d&amp;#39;arrivée...">coup</a> jouerIA(<span class="keyword">const</span> <a class="code" href="structplateau.html" title="Objet plateau. Le plateau est composé de 50 cases, numérotées de 1 à 50. Il comporte un historique de...">plateau</a> p, <span class="keywordtype">int</span> profondeur) {
<a name="l00020"></a>00020         srand(time(NULL));
<a name="l00021"></a>00021         <span class="keywordtype">double</span> alpha = MINIMUM;
<a name="l00022"></a>00022         <span class="keywordtype">double</span> beta = MAXIMUM;
<a name="l00023"></a>00023         <a class="code" href="structcoup.html" title="Objet coup. Un coup est défini par un numéro de case de départ, un numéro de case d&amp;#39;arrivée...">coup</a> res;
<a name="l00024"></a>00024         <a class="code" href="structcoup.html" title="Objet coup. Un coup est défini par un numéro de case de départ, un numéro de case d&amp;#39;arrivée...">coup</a> * coups_possibles = getCoupsMax(getCoups(p.<a class="code" href="structplateau.html#ab38c06b0c7e61b9eeb63b04c5e5bc652">tour</a>,p));
<a name="l00025"></a>00025 
<a name="l00026"></a>00026         <span class="keywordtype">int</span> i = 0;
<a name="l00027"></a>00027         <a class="code" href="structcoup.html" title="Objet coup. Un coup est défini par un numéro de case de départ, un numéro de case d&amp;#39;arrivée...">coup</a> c;
<a name="l00028"></a>00028         <span class="keywordtype">int</span> nbCoups = nombre_coups(coups_possibles);
<a name="l00029"></a>00029 
<a name="l00030"></a>00030         res = coups_possibles[rand() % nbCoups];
<a name="l00031"></a>00031 
<a name="l00032"></a>00032         <span class="comment">/*if(nbCoups == 1) {</span>
<a name="l00033"></a>00033 <span class="comment">                return coups_possibles[0];</span>
<a name="l00034"></a>00034 <span class="comment">        }</span>
<a name="l00035"></a>00035 <span class="comment"></span>
<a name="l00036"></a>00036 <span class="comment">        while ( i &lt; nbCoups) { // On parcours la liste des coups possibles</span>
<a name="l00037"></a>00037 <span class="comment">                c = coups_possibles[i];</span>
<a name="l00038"></a>00038 <span class="comment">                plateau new_p = p;</span>
<a name="l00039"></a>00039 <span class="comment">                plateau_appliquer_coup(c,&amp;new_p);</span>
<a name="l00040"></a>00040 <span class="comment">                double tmp = min(new_p, profondeur - 1,alpha,beta);</span>
<a name="l00041"></a>00041 <span class="comment">                if (tmp &gt; alpha) { // si le coup est meilleur que le précedent, on le garde</span>
<a name="l00042"></a>00042 <span class="comment">                        alpha = tmp;</span>
<a name="l00043"></a>00043 <span class="comment">                        res = c;</span>
<a name="l00044"></a>00044 <span class="comment">                }</span>
<a name="l00045"></a>00045 <span class="comment">                i++;</span>
<a name="l00046"></a>00046 <span class="comment">        }*/</span>
<a name="l00047"></a>00047         <span class="keywordflow">return</span> res;
<a name="l00048"></a>00048 }
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 <span class="keywordtype">double</span> max(<a class="code" href="structplateau.html" title="Objet plateau. Le plateau est composé de 50 cases, numérotées de 1 à 50. Il comporte un historique de...">plateau</a> p, <span class="keywordtype">int</span> profondeur, <span class="keywordtype">double</span> alpha, <span class="keywordtype">double</span> beta) {
<a name="l00051"></a>00051 
<a name="l00052"></a>00052         <span class="keywordflow">if</span> (plateau_partie_finie(p) || profondeur == 0) { <span class="comment">/* si on arrive à la profondeur max ou que la partie est gangée/perdue, on renvoie l&#39;évaluation */</span>
<a name="l00053"></a>00053                 <span class="comment">/* TODO utiliser fonction d&#39;évaluation */</span>
<a name="l00054"></a>00054                 <span class="keywordflow">return</span> 0;<span class="comment">//((rand() % 200) - 100.0) / 100.0;</span>
<a name="l00055"></a>00055         } <span class="keywordflow">else</span> {
<a name="l00056"></a>00056                 <a class="code" href="structcoup.html" title="Objet coup. Un coup est défini par un numéro de case de départ, un numéro de case d&amp;#39;arrivée...">coup</a> * coups_possibles = getCoupsMax(getCoups(p.<a class="code" href="structplateau.html#ab38c06b0c7e61b9eeb63b04c5e5bc652">tour</a>,p));
<a name="l00057"></a>00057 
<a name="l00058"></a>00058                 <span class="keywordtype">int</span> i = 0;
<a name="l00059"></a>00059                 <a class="code" href="structcoup.html" title="Objet coup. Un coup est défini par un numéro de case de départ, un numéro de case d&amp;#39;arrivée...">coup</a> c;
<a name="l00060"></a>00060                 <span class="keywordtype">int</span> nbCoups = nombre_coups(coups_possibles);
<a name="l00061"></a>00061                 <span class="keywordflow">while</span> (i &lt; nbCoups) { <span class="comment">/* On parcours la liste des coups possibles */</span>
<a name="l00062"></a>00062                         c = coups_possibles[i];
<a name="l00063"></a>00063                         <a class="code" href="structplateau.html" title="Objet plateau. Le plateau est composé de 50 cases, numérotées de 1 à 50. Il comporte un historique de...">plateau</a> new_p = p;
<a name="l00064"></a>00064                         plateau_appliquer_coup(c,&amp;new_p);
<a name="l00065"></a>00065                         alpha = maximum(alpha,min(new_p, profondeur - 1,alpha,beta));
<a name="l00066"></a>00066 
<a name="l00067"></a>00067                         <span class="keywordflow">if</span> (beta &lt;= alpha) { <span class="comment">/* si le coup est meilleur que le précedent, on le garde */</span>
<a name="l00068"></a>00068                                 <span class="keywordflow">return</span> alpha;
<a name="l00069"></a>00069                         }
<a name="l00070"></a>00070                         i++;
<a name="l00071"></a>00071                 }
<a name="l00072"></a>00072                 <span class="keywordflow">return</span> alpha;
<a name="l00073"></a>00073         }
<a name="l00074"></a>00074 
<a name="l00075"></a>00075 }
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 <span class="keywordtype">double</span> min(<a class="code" href="structplateau.html" title="Objet plateau. Le plateau est composé de 50 cases, numérotées de 1 à 50. Il comporte un historique de...">plateau</a> p, <span class="keywordtype">int</span> profondeur, <span class="keywordtype">double</span> alpha, <span class="keywordtype">double</span> beta) {
<a name="l00078"></a>00078         <span class="keywordflow">if</span> (plateau_partie_finie(p) || profondeur == 0) { <span class="comment">/* si on arrive à la profondeur max, on renvoie l&#39;évaluation */</span>
<a name="l00079"></a>00079                 <span class="comment">/* TODO utiliser fonction d&#39;évaluation */</span>
<a name="l00080"></a>00080                 <span class="keywordflow">return</span> 0;<span class="comment">//((rand() % 200) - 100.0) / 100.0;</span>
<a name="l00081"></a>00081         } <span class="keywordflow">else</span> {
<a name="l00082"></a>00082                 <a class="code" href="structcoup.html" title="Objet coup. Un coup est défini par un numéro de case de départ, un numéro de case d&amp;#39;arrivée...">coup</a> * coups_possibles = getCoupsMax(getCoups(p.<a class="code" href="structplateau.html#ab38c06b0c7e61b9eeb63b04c5e5bc652">tour</a>,p));
<a name="l00083"></a>00083 
<a name="l00084"></a>00084                 <span class="keywordtype">int</span> i = 0;
<a name="l00085"></a>00085                 <a class="code" href="structcoup.html" title="Objet coup. Un coup est défini par un numéro de case de départ, un numéro de case d&amp;#39;arrivée...">coup</a> c;
<a name="l00086"></a>00086                 <span class="keywordtype">int</span> nbCoups = nombre_coups(coups_possibles);
<a name="l00087"></a>00087                 <span class="keywordflow">while</span> ( i &lt; nbCoups ) { <span class="comment">/* On parcours la liste des coups possibles */</span>
<a name="l00088"></a>00088                         printf(<span class="stringliteral">&quot;evaluation min du coup : %i\n&quot;</span>,i);
<a name="l00089"></a>00089                         c  = coups_possibles[i];
<a name="l00090"></a>00090                         <a class="code" href="structplateau.html" title="Objet plateau. Le plateau est composé de 50 cases, numérotées de 1 à 50. Il comporte un historique de...">plateau</a> new_p = p;
<a name="l00091"></a>00091                         plateau_appliquer_coup(c,&amp;new_p);
<a name="l00092"></a>00092                         beta = minimum(beta, max(new_p, profondeur - 1,alpha,beta));
<a name="l00093"></a>00093                         <span class="keywordflow">if</span> (alpha &gt;= beta) { <span class="comment">/* coupure beta */</span>
<a name="l00094"></a>00094                                 <span class="keywordflow">return</span> beta;
<a name="l00095"></a>00095                         }
<a name="l00096"></a>00096                         i++;
<a name="l00097"></a>00097                 }
<a name="l00098"></a>00098                 <span class="keywordflow">return</span> beta;
<a name="l00099"></a>00099         }
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 }
</pre></div></div>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Tout</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Structures de données</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Fichiers</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Fonctions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Énumérations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Valeurs énumérées</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Généré le Mon May 9 2011 00:36:50 pour Jeu de dames par&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </small></address>
</body>
</html>
